Importing builtins.idr ... /Users/edwin/lib/idris/builtins.idr
Importing bool.idr ... /Users/edwin/lib/idris/bool.idr
Importing prelude.idr ... /Users/edwin/lib/idris/prelude.idr
Importing vect.idr ... /Users/edwin/lib/idris/vect.idr
Importing nat.idr ... /Users/edwin/lib/idris/nat.idr
Importing tactics.idr ... /Users/edwin/lib/idris/tactics.idr
Importing either.idr ... /Users/edwin/lib/idris/either.idr
Importing io.idr ... /Users/edwin/lib/idris/io.idr
Importing list.idr ... /Users/edwin/lib/idris/list.idr
Importing maybe.idr ... /Users/edwin/lib/idris/maybe.idr
Importing nat.idr ... already loaded
Importing test002.idr ... ./test002.idr
Importing vect.idr ... already loaded
Output test002
Importing builtins.idr ... /Users/edwin/lib/idris/builtins.idr
Importing bool.idr ... /Users/edwin/lib/idris/bool.idr
Importing prelude.idr ... /Users/edwin/lib/idris/prelude.idr
Importing vect.idr ... /Users/edwin/lib/idris/vect.idr
Importing nat.idr ... /Users/edwin/lib/idris/nat.idr
Importing tactics.idr ... /Users/edwin/lib/idris/tactics.idr
Importing either.idr ... /Users/edwin/lib/idris/either.idr
Importing io.idr ... /Users/edwin/lib/idris/io.idr
Importing list.idr ... /Users/edwin/lib/idris/list.idr
Importing maybe.idr ... /Users/edwin/lib/idris/maybe.idr
Importing nat.idr ... already loaded
Importing test002.idr ... ./test002.idr
Importing vect.idr ... already loaded
sumaS = \ acc[0] : Int => \ xs[0] : List Int => if_then_else (empty xs[0]) acc[0] (sumaS (head xs[0]+acc[0]) (tail xs[0]))

Compiles as:

sumaS = [acc[0]:Int][xs[0]:List Int]if_then_else _ (empty _ xs[0]) acc[0] (sumaS (__addInt (head _ xs[0]) acc[0]) (tail _ xs[0]))

50005000
